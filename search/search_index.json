{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":""},{"location":"#index","title":"Index","text":"<p>Here is a home page for coding patterns to help Ming keep track of things so he doesn't forever keep wasting his time. </p>"},{"location":"commandline/","title":"CommandLine","text":""},{"location":"commandline/#determine-life-of-ssd","title":"Determine life of SSD","text":"<pre><code>sudo smartctl -t short -a /dev/sda\n</code></pre>"},{"location":"commandline/#setup-new-ssd-on-workstation","title":"Setup new SSD on workstation","text":"<p>Check the device name</p> <pre><code>lsblk\n</code></pre> <p>Use gparted in UI</p>"},{"location":"commandline/#docker-cleanup","title":"Docker Cleanup","text":"<p>If docker is being annoying and creating a ton of stuff in the overlay2 folder even though docker system df is clear. To fully clear Docker do the following</p> <p>Clear the official documents</p> <pre><code>docker system clean -af\n</code></pre> <p>Clear overlay2 which is major surgery on docker</p> <pre><code>sudo systemctl stop docker.socket\nsudo systemctl stop docker\n\nsudo rm /var/lib/docker -r\n\nsudo systemctl start docker.socket\nsudo systemctl start docker\n</code></pre>"},{"location":"commandline/#sqlite3-dump-resoration","title":"SQLITE3 Dump Resoration","text":"<p>If you have a database corruption and need to recreate a Sqlite3 Database, you can use the following commands:</p> <pre><code>cat db.schema | sqlite3 database.db\ncat db.dump | | sqlite3 database.db\n</code></pre> <p>NOTE: Its important to use the schema because the ordering of the columns might not actually be correct on the original database and you'll get scrambled columns if you don't do this. </p>"},{"location":"commandline/#ssh-security","title":"SSH Security","text":"<p>How to disable password SSH - link</p>"},{"location":"commandline/#change-hostname","title":"Change Hostname","text":"<p>You can change the hostname of the server so the terminal names actually change. Super userful when you have a lot of servers running around</p> <pre><code>sudo hostnamectl set-hostname newhostname\n</code></pre>"},{"location":"dash/","title":"Dash Patterns","text":""},{"location":"dash/#dash-patterns","title":"Dash Patterns","text":"<p>Have tracked them in this Git repository:</p> <p>link</p>"},{"location":"dash/#dash-web-server-patterns","title":"Dash Web Server Patterns","text":"<p>Can be found here.</p>"},{"location":"git/","title":"Git","text":""},{"location":"git/#cleaning-out-already-merged-branches","title":"Cleaning out already merged branches","text":"<pre><code>git branch --merged | grep -v \"\\*\" | xargs -n 1 git branch -d\n</code></pre>"},{"location":"git/#update-all-submodules-in-folder","title":"Update all submodules in folder","text":"<pre><code>for d in */; do (cd \"$d\" &amp;&amp; git pull); done\n</code></pre>"},{"location":"markdown/","title":"Markdown","text":""},{"location":"markdown/#ascii-drawing","title":"ASCII Drawing","text":"<p>Link</p>"},{"location":"markdown/#converting-docx-to-markdown","title":"Converting Docx to Markdown","text":"<p>Link</p>"},{"location":"nextflow/","title":"NextFlow","text":""},{"location":"nextflow/#flags-for-command-line","title":"Flags for Command Line","text":"<pre><code>script:\ndef flag = params.ms2_flag == true ? \"--ms2_flag\" : ''\n\"\"\"\n$flag\n\"\"\"\n</code></pre>"},{"location":"python/","title":"Python","text":""},{"location":"python/#profiling-and-creating-a-visualzaiton","title":"Profiling and creating a visualzaiton","text":"<p>Link. </p> <p>Worked well for me. Specifically <code>cProfile + gprof2dot + graphViz</code>. </p> <pre><code>python -m cProfile -o myLog.profile ./test.py\ngprof2dot -f pstats myLog.profile -o callingGraph.dot\ndot -Tsvg callingGraph.dot -o callingGraph.svg\n</code></pre>"},{"location":"python/#python-utilities","title":"Python Utilities","text":""},{"location":"python/#creating-chunks-of-big-list","title":"Creating chunks of big list","text":"<pre><code># Yield successive n-sized\n# chunks from l.\ndef divide_chunks(l, n):\n    # looping till length l\n    for i in range(0, len(l), n): \n        yield l[i:i + n]\n</code></pre>"}]}